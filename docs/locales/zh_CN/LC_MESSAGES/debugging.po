# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-25 19:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <withlihui@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../debugging.rst:2
msgid "Debugging Application Errors"
msgstr ""

#: ../../debugging.rst:6
msgid "In Production"
msgstr ""

#: ../../debugging.rst:8
msgid ""
"**Do not run the development server, or enable the built-in debugger, in "
"a production environment.** The debugger allows executing arbitrary "
"Python code from the browser. It's protected by a pin, but that should "
"not be relied on for security."
msgstr ""

#: ../../debugging.rst:13
msgid ""
"Use an error logging tool, such as Sentry, as described in :ref:`error-"
"logging-tools`, or enable logging and notifications as described in "
":doc:`/logging`."
msgstr ""

#: ../../debugging.rst:17
msgid ""
"If you have access to the server, you could add some code to start an "
"external debugger if ``request.remote_addr`` matches your IP. Some IDE "
"debuggers also have a remote mode so breakpoints on the server can be "
"interacted with locally. Only enable a debugger temporarily."
msgstr ""

#: ../../debugging.rst:24
msgid "The Built-In Debugger"
msgstr ""

#: ../../debugging.rst:26
msgid ""
"The built-in Werkzeug development server provides a debugger which shows "
"an interactive traceback in the browser when an unhandled error occurs "
"during a request. This debugger should only be used during development."
msgstr ""

msgid "screenshot of debugger in action"
msgstr ""

#: ../../debugging.rst:37
msgid ""
"The debugger allows executing arbitrary Python code from the browser. It "
"is protected by a pin, but still represents a major security risk. Do not"
" run the development server or debugger in a production environment."
msgstr ""

#: ../../debugging.rst:42
msgid ""
"To enable the debugger, run the development server with the ``FLASK_ENV``"
" environment variable set to ``development``. This puts Flask in debug "
"mode, which changes how it handles some errors, and enables the debugger "
"and reloader."
msgstr ""

#: ../../debugging.rst:49 ../../debugging.rst:102
msgid "Bash"
msgstr ""

#: ../../debugging.rst:56 ../../debugging.rst:109
msgid "CMD"
msgstr ""

#: ../../debugging.rst:63 ../../debugging.rst:116
msgid "Powershell"
msgstr ""

#: ../../debugging.rst:70
msgid ""
"``FLASK_ENV`` can only be set as an environment variable. When running "
"from Python code, passing ``debug=True`` enables debug mode, which is "
"mostly equivalent. Debug mode can be controled separately from "
"``FLASK_ENV`` with the ``FLASK_DEBUG`` environment variable as well."
msgstr ""

#: ../../debugging.rst:79
msgid ""
":doc:`/server` and :doc:`/cli` have more information about running the "
"debugger, debug mode, and development mode. More information about the "
"debugger can be found in the `Werkzeug documentation "
"<https://werkzeug.palletsprojects.com/debug/>`__."
msgstr ""

#: ../../debugging.rst:86
msgid "External Debuggers"
msgstr ""

#: ../../debugging.rst:88
msgid ""
"External debuggers, such as those provided by IDEs, can offer a more "
"powerful debugging experience than the built-in debugger. They can also "
"be used to step through code during a request before an error is raised, "
"or if no error is raised. Some even have a remote mode so you can debug "
"code running on another machine."
msgstr ""

#: ../../debugging.rst:94
msgid ""
"When using an external debugger, the app should still be in debug mode, "
"but it can be useful to disable the built-in debugger and reloader, which"
" can interfere."
msgstr ""

#: ../../debugging.rst:98
msgid "When running from the command line:"
msgstr ""

#: ../../debugging.rst:123
msgid "When running from Python:"
msgstr ""

#: ../../debugging.rst:129
msgid ""
"Disabling these isn't required, an external debugger will continue to "
"work with the following caveats. If the built-in debugger is not "
"disabled, it will catch unhandled exceptions before the external debugger"
" can. If the reloader is not disabled, it could cause an unexpected "
"reload if code changes during debugging."
msgstr ""

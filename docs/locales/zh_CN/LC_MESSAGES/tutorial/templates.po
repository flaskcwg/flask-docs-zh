# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-25 19:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <withlihui@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../tutorial/templates.rst:4
msgid "Templates"
msgstr ""

#: ../../tutorial/templates.rst:6
msgid ""
"You've written the authentication views for your application, but if "
"you're running the server and try to go to any of the URLs, you'll see a "
"``TemplateNotFound`` error. That's because the views are calling "
":func:`render_template`, but you haven't written the templates yet. The "
"template files will be stored in the ``templates`` directory inside the "
"``flaskr`` package."
msgstr ""

#: ../../tutorial/templates.rst:13
msgid ""
"Templates are files that contain static data as well as placeholders for "
"dynamic data. A template is rendered with specific data to produce a "
"final document. Flask uses the `Jinja`_ template library to render "
"templates."
msgstr ""

#: ../../tutorial/templates.rst:18
msgid ""
"In your application, you will use templates to render `HTML`_ which will "
"display in the user's browser. In Flask, Jinja is configured to "
"*autoescape* any data that is rendered in HTML templates. This means that"
" it's safe to render user input; any characters they've entered that "
"could mess with the HTML, such as ``<`` and ``>`` will be *escaped* with "
"*safe* values that look the same in the browser but don't cause unwanted "
"effects."
msgstr ""

#: ../../tutorial/templates.rst:26
msgid ""
"Jinja looks and behaves mostly like Python. Special delimiters are used "
"to distinguish Jinja syntax from the static data in the template. "
"Anything between ``{{`` and ``}}`` is an expression that will be output "
"to the final document. ``{%`` and ``%}`` denotes a control flow statement"
" like ``if`` and ``for``. Unlike Python, blocks are denoted by start and "
"end tags rather than indentation since static text within a block could "
"change indentation."
msgstr ""

#: ../../tutorial/templates.rst:39
msgid "The Base Layout"
msgstr ""

#: ../../tutorial/templates.rst:41
msgid ""
"Each page in the application will have the same basic layout around a "
"different body. Instead of writing the entire HTML structure in each "
"template, each template will *extend* a base template and override "
"specific sections."
msgstr ""

#: ../../tutorial/templates.rst:46
msgid "``flaskr/templates/base.html``"
msgstr ""

#: ../../tutorial/templates.rst:74
msgid ""
":data:`g` is automatically available in templates. Based on if ``g.user``"
" is set (from ``load_logged_in_user``), either the username and a log out"
" link are displayed, or links to register and log in are displayed. "
":func:`url_for` is also automatically available, and is used to generate "
"URLs to views instead of writing them out manually."
msgstr ""

#: ../../tutorial/templates.rst:80
msgid ""
"After the page title, and before the content, the template loops over "
"each message returned by :func:`get_flashed_messages`. You used "
":func:`flash` in the views to show error messages, and this is the code "
"that will display them."
msgstr ""

#: ../../tutorial/templates.rst:85
msgid ""
"There are three blocks defined here that will be overridden in the other "
"templates:"
msgstr ""

#: ../../tutorial/templates.rst:88
msgid ""
"``{% block title %}`` will change the title displayed in the browser's "
"tab and window title."
msgstr ""

#: ../../tutorial/templates.rst:91
msgid ""
"``{% block header %}`` is similar to ``title`` but will change the title "
"displayed on the page."
msgstr ""

#: ../../tutorial/templates.rst:94
msgid ""
"``{% block content %}`` is where the content of each page goes, such as "
"the login form or a blog post."
msgstr ""

#: ../../tutorial/templates.rst:97
msgid ""
"The base template is directly in the ``templates`` directory. To keep the"
" others organized, the templates for a blueprint will be placed in a "
"directory with the same name as the blueprint."
msgstr ""

#: ../../tutorial/templates.rst:103
msgid "Register"
msgstr ""

#: ../../tutorial/templates.rst:105
msgid "``flaskr/templates/auth/register.html``"
msgstr ""

#: ../../tutorial/templates.rst:124
#, python-format
msgid ""
"``{% extends 'base.html' %}`` tells Jinja that this template should "
"replace the blocks from the base template. All the rendered content must "
"appear inside ``{% block %}`` tags that override blocks from the base "
"template."
msgstr ""

#: ../../tutorial/templates.rst:129
msgid ""
"A useful pattern used here is to place ``{% block title %}`` inside ``{% "
"block header %}``. This will set the title block and then output the "
"value of it into the header block, so that both the window and page share"
" the same title without writing it twice."
msgstr ""

#: ../../tutorial/templates.rst:134
msgid ""
"The ``input`` tags are using the ``required`` attribute here. This tells "
"the browser not to submit the form until those fields are filled in. If "
"the user is using an older browser that doesn't support that attribute, "
"or if they are using something besides a browser to make requests, you "
"still want to validate the data in the Flask view. It's important to "
"always fully validate the data on the server, even if the client does "
"some validation as well."
msgstr ""

#: ../../tutorial/templates.rst:144
msgid "Log In"
msgstr ""

#: ../../tutorial/templates.rst:146
msgid ""
"This is identical to the register template except for the title and "
"submit button."
msgstr ""

#: ../../tutorial/templates.rst:149
msgid "``flaskr/templates/auth/login.html``"
msgstr ""

#: ../../tutorial/templates.rst:170
msgid "Register A User"
msgstr ""

#: ../../tutorial/templates.rst:172
msgid ""
"Now that the authentication templates are written, you can register a "
"user. Make sure the server is still running (``flask run`` if it's not), "
"then go to http://127.0.0.1:5000/auth/register."
msgstr ""

#: ../../tutorial/templates.rst:176
msgid ""
"Try clicking the \"Register\" button without filling out the form and see"
" that the browser shows an error message. Try removing the ``required`` "
"attributes from the ``register.html`` template and click \"Register\" "
"again. Instead of the browser showing an error, the page will reload and "
"the error from :func:`flash` in the view will be shown."
msgstr ""

#: ../../tutorial/templates.rst:182
msgid ""
"Fill out a username and password and you'll be redirected to the login "
"page. Try entering an incorrect username, or the correct username and "
"incorrect password. If you log in you'll get an error because there's no "
"``index`` view to redirect to yet."
msgstr ""

#: ../../tutorial/templates.rst:187
msgid "Continue to :doc:`static`."
msgstr ""

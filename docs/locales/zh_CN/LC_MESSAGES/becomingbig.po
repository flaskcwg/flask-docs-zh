# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-25 19:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <withlihui@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../becomingbig.rst:2
msgid "Becoming Big"
msgstr ""

#: ../../becomingbig.rst:4
msgid ""
"Here are your options when growing your codebase or scaling your "
"application."
msgstr ""

#: ../../becomingbig.rst:7
msgid "Read the Source."
msgstr ""

#: ../../becomingbig.rst:9
msgid ""
"Flask started in part to demonstrate how to build your own framework on "
"top of existing well-used tools Werkzeug (WSGI) and Jinja (templating), "
"and as it developed, it became useful to a wide audience.  As you grow "
"your codebase, don't just use Flask -- understand it.  Read the source.  "
"Flask's code is written to be read; its documentation is published so you"
" can use its internal APIs.  Flask sticks to documented APIs in upstream "
"libraries, and documents its internal utilities so that you can find the "
"hook points needed for your project."
msgstr ""

#: ../../becomingbig.rst:19
msgid "Hook. Extend."
msgstr ""

#: ../../becomingbig.rst:21
msgid ""
"The :doc:`/api` docs are full of available overrides, hook points, and "
":doc:`/signals`. You can provide custom classes for things like the "
"request and response objects. Dig deeper on the APIs you use, and look "
"for the customizations which are available out of the box in a Flask "
"release. Look for ways in which your project can be refactored into a "
"collection of utilities and Flask extensions. Explore the many "
":doc:`/extensions` in the community, and look for patterns to build your "
"own extensions if you do not find the tools you need."
msgstr ""

#: ../../becomingbig.rst:31
msgid "Subclass."
msgstr ""

#: ../../becomingbig.rst:33
msgid ""
"The :class:`~flask.Flask` class has many methods designed for "
"subclassing. You can quickly add or customize behavior by subclassing "
":class:`~flask.Flask` (see the linked method docs) and using that "
"subclass wherever you instantiate an application class. This works well "
"with :doc:`/patterns/appfactories`. See :doc:`/patterns/subclassing` for "
"an example."
msgstr ""

#: ../../becomingbig.rst:40
msgid "Wrap with middleware."
msgstr ""

#: ../../becomingbig.rst:42
msgid ""
"The :doc:`/patterns/appdispatch` pattern shows in detail how to apply "
"middleware. You can introduce WSGI middleware to wrap your Flask "
"instances and introduce fixes and changes at the layer between your Flask"
" application and your HTTP server. Werkzeug includes several `middlewares"
" <https://werkzeug.palletsprojects.com/middleware/>`_."
msgstr ""

#: ../../becomingbig.rst:49
msgid "Fork."
msgstr ""

#: ../../becomingbig.rst:51
msgid ""
"If none of the above options work, fork Flask.  The majority of code of "
"Flask is within Werkzeug and Jinja2.  These libraries do the majority of "
"the work. Flask is just the paste that glues those together.  For every "
"project there is the point where the underlying framework gets in the way"
" (due to assumptions the original developers had).  This is natural "
"because if this would not be the case, the framework would be a very "
"complex system to begin with which causes a steep learning curve and a "
"lot of user frustration."
msgstr ""

#: ../../becomingbig.rst:59
msgid ""
"This is not unique to Flask.  Many people use patched and modified "
"versions of their framework to counter shortcomings.  This idea is also "
"reflected in the license of Flask.  You don't have to contribute any "
"changes back if you decide to modify the framework."
msgstr ""

#: ../../becomingbig.rst:64
msgid ""
"The downside of forking is of course that Flask extensions will most "
"likely break because the new framework has a different import name. "
"Furthermore integrating upstream changes can be a complex process, "
"depending on the number of changes.  Because of that, forking should be "
"the very last resort."
msgstr ""

#: ../../becomingbig.rst:71
msgid "Scale like a pro."
msgstr ""

#: ../../becomingbig.rst:73
msgid ""
"For many web applications the complexity of the code is less an issue "
"than the scaling for the number of users or data entries expected.  Flask"
" by itself is only limited in terms of scaling by your application code, "
"the data store you want to use and the Python implementation and "
"webserver you are running on."
msgstr ""

#: ../../becomingbig.rst:79
msgid ""
"Scaling well means for example that if you double the amount of servers "
"you get about twice the performance.  Scaling bad means that if you add a"
" new server the application won't perform any better or would not even "
"support a second server."
msgstr ""

#: ../../becomingbig.rst:84
msgid ""
"There is only one limiting factor regarding scaling in Flask which are "
"the context local proxies.  They depend on context which in Flask is "
"defined as being either a thread, process or greenlet.  If your server "
"uses some kind of concurrency that is not based on threads or greenlets, "
"Flask will no longer be able to support these global proxies.  However "
"the majority of servers are using either threads, greenlets or separate "
"processes to achieve concurrency which are all methods well supported by "
"the underlying Werkzeug library."
msgstr ""

#: ../../becomingbig.rst:94
msgid "Discuss with the community."
msgstr ""

#: ../../becomingbig.rst:96
msgid ""
"The Flask developers keep the framework accessible to users with "
"codebases big and small. If you find an obstacle in your way, caused by "
"Flask, don't hesitate to contact the developers on the mailing list or "
"Discord server.  The best way for the Flask and Flask extension "
"developers to improve the tools for larger applications is getting "
"feedback from users."
msgstr ""

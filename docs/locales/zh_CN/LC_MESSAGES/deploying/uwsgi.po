# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-25 19:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh_CN <withlihui@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../deploying/uwsgi.rst:2
msgid "uWSGI"
msgstr ""

#: ../../deploying/uwsgi.rst:4
msgid ""
"uWSGI is a deployment option on servers like `nginx`_, `lighttpd`_, and "
"`cherokee`_; see :doc:`fastcgi` and :doc:`wsgi-standalone` for other "
"options. To use your WSGI application with uWSGI protocol you will need a"
" uWSGI server first. uWSGI is both a protocol and an application server; "
"the application server can serve uWSGI, FastCGI, and HTTP protocols."
msgstr ""

#: ../../deploying/uwsgi.rst:10
msgid ""
"The most popular uWSGI server is `uwsgi`_, which we will use for this "
"guide. Make sure to have it installed to follow along."
msgstr ""

#: ../../deploying/uwsgi.rst:13
msgid "Watch Out"
msgstr ""

#: ../../deploying/uwsgi.rst:15
msgid ""
"Please make sure in advance that any ``app.run()`` calls you might have "
"in your application file are inside an ``if __name__ == '__main__':`` "
"block or moved to a separate file.  Just make sure it's not called "
"because this will always start a local WSGI server which we do not want "
"if we deploy that application to uWSGI."
msgstr ""

#: ../../deploying/uwsgi.rst:22
msgid "Starting your app with uwsgi"
msgstr ""

#: ../../deploying/uwsgi.rst:24
msgid "`uwsgi` is designed to operate on WSGI callables found in python modules."
msgstr ""

#: ../../deploying/uwsgi.rst:26
msgid "Given a flask application in myapp.py, use the following command:"
msgstr ""

#: ../../deploying/uwsgi.rst:32
msgid ""
"The ``--manage-script-name`` will move the handling of ``SCRIPT_NAME`` to"
" uwsgi, since it is smarter about that. It is used together with the "
"``--mount`` directive which will make requests to ``/yourapplication`` be"
" directed to ``myapp:app``. If your application is accessible at root "
"level, you can use a single ``/`` instead of ``/yourapplication``. "
"``myapp`` refers to the name of the file of your flask application "
"(without extension) or the module which provides ``app``. ``app`` is the "
"callable inside of your application (usually the line reads ``app = "
"Flask(__name__)``."
msgstr ""

#: ../../deploying/uwsgi.rst:42
msgid ""
"If you want to deploy your flask application inside of a virtual "
"environment, you need to also add ``--virtualenv "
"/path/to/virtual/environment``. You might also need to add ``--plugin "
"python`` or ``--plugin python3`` depending on which python version you "
"use for your project."
msgstr ""

#: ../../deploying/uwsgi.rst:48
msgid "Configuring nginx"
msgstr ""

#: ../../deploying/uwsgi.rst:50
msgid "A basic flask nginx configuration looks like this::"
msgstr ""

#: ../../deploying/uwsgi.rst:59
msgid ""
"This configuration binds the application to ``/yourapplication``.  If you"
" want to have it in the URL root its a bit simpler::"
msgstr ""

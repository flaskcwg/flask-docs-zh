# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-30 19:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Grey Li <withlihui@gmail.com>\n"
"Language-Team: zh_CN <withlihui@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../installation.rst:2
msgid "Installation"
msgstr "安装"

#: ../../installation.rst:6
msgid "Python Version"
msgstr "Python 版本"

#: ../../installation.rst:8
msgid ""
"We recommend using the latest version of Python. Flask supports Python "
"3.6 and newer."
msgstr "我们建议使用最新版本的 Python。Flask 支持 Python 3.6 及其以上版本。"

#: ../../installation.rst:11
msgid ""
"``async`` support in Flask requires Python 3.7+ for "
"``contextvars.ContextVar``."
msgstr ""

#: ../../installation.rst:15
msgid "Dependencies"
msgstr "依赖"

#: ../../installation.rst:17
msgid "These distributions will be installed automatically when installing Flask."
msgstr "这些包会在安装 Flask 的时候被自动安装。"

#: ../../installation.rst:19
msgid ""
"`Werkzeug`_ implements WSGI, the standard Python interface between "
"applications and servers."
msgstr "`Werkzeug`_ 实现了 WSGI——程序和服务器之间交互的 Python 标准。"

#: ../../installation.rst:21
msgid ""
"`Jinja`_ is a template language that renders the pages your application "
"serves."
msgstr "`Jinja`_ 是一个模板语言，它可以渲染你的程序提供的页面。"

#: ../../installation.rst:23
msgid ""
"`MarkupSafe`_ comes with Jinja. It escapes untrusted input when rendering"
" templates to avoid injection attacks."
msgstr "`MarkupSafe`_ 随 Jinja 附带。当渲染模板时，它会转义不受信任的输入以避免注入攻击。"

#: ../../installation.rst:25
msgid ""
"`ItsDangerous`_ securely signs data to ensure its integrity. This is used"
" to protect Flask's session cookie."
msgstr "`ItsDangerous`_ 可以安全地签名数据以确保数据的完整性。这被用来保护 Flask 的 ``session`` cookie。"

#: ../../installation.rst:27
msgid ""
"`Click`_ is a framework for writing command line applications. It "
"provides the ``flask`` command and allows adding custom management "
"commands."
msgstr "`Click`_ 是一个用来写命令行程序的框架。它提供了 ``flask`` 命令并允许添加自定义管理命令。"

#: ../../installation.rst:38
msgid "Optional dependencies"
msgstr "可选依赖"

#: ../../installation.rst:40
msgid ""
"These distributions will not be installed automatically. Flask will "
"detect and use them if you install them."
msgstr "这些包不会被自动安装。如果你安装了的话，Flask 会检测到并使用它们。"

#: ../../installation.rst:43
msgid "`Blinker`_ provides support for :doc:`signals`."
msgstr "`Blinker`_ 提供 :doc:`signals` 支持。"

#: ../../installation.rst:44
msgid ""
"`python-dotenv`_ enables support for :ref:`dotenv` when running ``flask``"
" commands."
msgstr "`python-dotenv`_ 在执行 ``flask`` 命令时开启对 :ref:`dotenv` 的支持。"

#: ../../installation.rst:46
msgid ""
"`Watchdog`_ provides a faster, more efficient reloader for the "
"development server."
msgstr "`Watchdog`_ 为开发服务器提供更快和更高效的重载器（reloader）。"

#: ../../installation.rst:55
msgid "Virtual environments"
msgstr "虚拟环境"

#: ../../installation.rst:57
msgid ""
"Use a virtual environment to manage the dependencies for your project, "
"both in development and in production."
msgstr "使用虚拟环境可以在开发和生产环境下管理项目依赖。"

#: ../../installation.rst:60
msgid ""
"What problem does a virtual environment solve? The more Python projects "
"you have, the more likely it is that you need to work with different "
"versions of Python libraries, or even Python itself. Newer versions of "
"libraries for one project can break compatibility in another project."
msgstr ""
"虚拟环境解决了什么问题？你的 Python 项目越多，就越有可能需要使用不同版本的 Python 包，甚至 Python "
"本身。某个项目使用的新版本的库可能会破坏其他项目的兼容性。"

#: ../../installation.rst:65
msgid ""
"Virtual environments are independent groups of Python libraries, one for "
"each project. Packages installed for one project will not affect other "
"projects or the operating system's packages."
msgstr "虚拟环境是 Python 库的独立集合，每一个项目对应一个虚拟环境。安装到某个项目的包不会影响其他项目或是操作系统层级的包。"

#: ../../installation.rst:69
msgid ""
"Python comes bundled with the :mod:`venv` module to create virtual "
"environments."
msgstr "Python 自带的 :mod:`venv` 模块可以用来创建虚拟环境。"

#: ../../installation.rst:76
msgid "Create an environment"
msgstr "创建虚拟环境"

#: ../../installation.rst:78
msgid "Create a project folder and a :file:`venv` folder within:"
msgstr "创建一个项目文件夹，并在其中创建虚拟环境文件夹 :file:`venv`："

#: ../../installation.rst:82 ../../installation.rst:108
msgid "macOS/Linux"
msgstr "macOS/Linux"

#: ../../installation.rst:90 ../../installation.rst:114
msgid "Windows"
msgstr "Windows"

#: ../../installation.rst:102
msgid "Activate the environment"
msgstr "激活虚拟环境"

#: ../../installation.rst:104
msgid "Before you work on your project, activate the corresponding environment:"
msgstr "在开始动手做你的项目之前，先激活对应的虚拟环境："

#: ../../installation.rst:120
msgid ""
"Your shell prompt will change to show the name of the activated "
"environment."
msgstr "你的 shell 提示符现在会显示激活的虚拟环境名称。"

#: ../../installation.rst:125
msgid "Install Flask"
msgstr "安装 Flask"

#: ../../installation.rst:127
msgid ""
"Within the activated environment, use the following command to install "
"Flask:"
msgstr "在激活的虚拟环境内，使用下面的命令安装 Flask："

#: ../../installation.rst:134
msgid ""
"Flask is now installed. Check out the :doc:`/quickstart` or go to the "
":doc:`Documentation Overview </index>`."
msgstr ""
"Flask 现在已经安装好了。阅读 :doc:`/quickstart` 或是前往 :doc:`文档概览 </index>` 进一步了解 "
"Flask。"
